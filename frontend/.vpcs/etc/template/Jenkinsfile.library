#!groovy
// VPCS NextJS Jenkinsfile
@Library('conveyor@latest-5')
@Library("conveyor-i-util@latest") _
def scm = [
  $class: 'GitSCM',
  extensions: [
    [
      $class: 'CloneOption',
      shallow: false,
      noTags: false,
      honorRefspec: true
    ]
  ],
  branches: scm.branches,
  userRemoteConfigs: scm.userRemoteConfigs
]

//if (env.GITHUB_PULL_REQUEST == "false" && env.GITHUB_BRANCH != "main") return
def imgTag = new Date().format("yyyy.MM.dd.HH.mm.ss") + "-${env.BUILD_GIT_COMMIT}".take(7)
def imgName = "PROJECTNAME:${imgTag}"
def imgNameLatest = "PROJECTNAME:latest"
def imgNameLatestTag = "@vpcs/vpcs-nextjs:${env.BUILD_GIT_COMMIT}".take(7)
def imgPfx = "docker-conveyor.groupondev.com/conveyor"

  withCredentials([
    string(credentialsId: 'NLM_GH_TOKEN', variable: 'GH_TOKEN')
    string(credentialsId: 'NLM_NPM_EMAIL', variable: 'NPM_EMAIL'),
    string(credentialsId: 'NLM_NPM_USERNAME', variable: 'NPM_USERNAME'),
    string(credentialsId: 'NLM_NPM_PASSWORD_BASE64', variable: 'NPM_PASSWORD_BASE64')
  ]) {
    node {
      stage('tests') {
        if (env.GITHUB_BRANCH == "core") return
        stage('node tests'){
          checkout scm
          // docker-generic-us-west-2.artifactory.groupondev.com/alpine:3.16.0
          docker.image("IMAGENAME").inside {
            sh "npm cit"
          }
        }
      }

      stage('publish') {
        if (env.GITHUB_BRANCH != "main" && env.GITHUB_BRANCH != "showcase") return
        nodeFormatted("multitenant") {
          checkout scm
          docker.image("${imgPfx}/alpine-node:16.2.0").inside {
            sh "pnpm exec nx release publish PROJECTNAME --npm-email=${NPM_EMAIL} --npm-username=${NPM_USERNAME} --npm-password-base64=${NPM_PASSWORD_BASE64} --gh-token=${GH_TOKEN}"
            sh 'npx nlm release --commit'
          }
        }
      }
    }
  }