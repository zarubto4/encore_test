#!/bin/sh -e
#- vpcs sys setenv [environment] - updates files to new environment
# Changes the linked envfile from core .envrc too...
[[ "$1" =~ ^development|ci|catfood|staging|production$ ]] && NewEnvironment="$1" || vpcs log error "Incorrect environment! Use development, ci, catfood, staging, or production."
[[ "$NewEnvironment" = "development" ]] && NewNodeEnv="development" || NewNodeEnv="production"
export VPCS_ENV="$NewEnvironment"
AppName="$(cat $(locate vpcs-config) | yq -r ".apps.primary")"
[[ -z "$AppName" ]] && AppName="$(cat $APP_ROOT/project.json | jq -r '.name')"
[[ -z "$AppName" ]] && vpcs log error "No primary app found in vpcs-config or project.json! Please add .apps.primary in vpcs.yml" && exit 1
rm -rf .vpcs/tmp/*
mkdir -p $APP_ROOT/.ci
Content=$( cat <<-:
  export VPCS_ENVIRONMENT="$NewEnvironment"
  export NODE_ENV="$NewNodeEnv"
:
)
[[ -f $APP_ROOT/docker-compose.yml ]] && rm $APP_ROOT/docker-compose.yml
[[ ! -d $APP_ROOT/.ci ]] && mkdir -p $APP_ROOT/.ci
[[ ! -f $APP_ROOT/.ci/docker-compose.yml ]] && cat $(locate "tmp")/docker-compose.yml | sed "s/vpcs_app/$AppName/g" > $APP_ROOT/.ci/docker-compose.yml
[[ ! -f $APP_ROOT/.dockerignore ]] && cp $(locate etc)/docker/image-templates/.dockerignore $APP_ROOT/.dockerignore
[[ ! -f $APP_ROOT/docker-compose ]] && cat $(locate "env")/docker-compose.yml | sed "s/vpcs_app/$AppName/g" > $APP_ROOT/docker-compose.yml

vpcs init env-profile environment.profile "$Content"
source $VPCS_ROOT/usr/env/environment.profile
# set environments for all app services

Projects="$(nx show projects | grep -v '/')"
for i in $Projects; do
  HostName="$(cat $(locate vpcs-config) | yq -r ".services.$i.hosts.$NewEnvironment")"
  [[ -z "$HostName" ]] && HostName="http://localhost:4200"
  vpcs update-config ".services.$i.features.public._globals.host" "$HostName"
  vpcs update-config ".services.$i.features.public._globals.apiHost" "$HostName"
  vpcs update-config ".servicse.$i.features.public._globals.environment" "$NewEnvironment"
  vpcs update-config ".services.$i.features.public._globals.name" "$i"
  vpcs next-configs "$i"
done