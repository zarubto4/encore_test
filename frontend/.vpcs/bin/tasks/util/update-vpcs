#!/bin/bash
#- vpcs update-vpcs <branch> gets .vpcs and setup.sh from another branch for commit.
# VPCS update self from another branch
[[ -z "$1" ]] && vpcs log error "Please provide a branch for the vpcs updates."

[[ "$@" =~ force ]] && Force="true" || Force="false"

# check version number
VersionCheck=($(git diff "$1"  "$(locate vpcs-internal-config)" | egrep "^[+-]version"))
if [[ ! -z "$VersionCheck" ]]; then
  for i in "${!VersionCheck[@]}"; do
    compval="${VersionCheck[$i]}"
    if [[ "$compval" =~ version ]]; then
      if [[ "$compval" =~ ^- ]]; then
        OldVersion="${VersionCheck[$i+1]}"
      else
        NewVersion="${VersionCheck[$i+1]}"
      fi
    fi
  done
  echo "Old version is $OldVersion"
  echo "New version is $NewVersion"
fi
if  [[ $OldVersion > $NewVersion ]]; then
  if [[ "$Force" = "true" ]]; then
    echo "Forcing overwrite..."
  else
    echo "Version conflict. If you really want to do this, use 'vpcs update <branchname> force'."
    exit 1
  fi
fi


git checkout "$1" -- .vpcs
git checkout "$1" -- setup.sh
git commit -m "task: automated tool update from $1"